@startuml
class HentNabolisteResultat {
    naboeiendommer: Eiendom[]
}

HentNabolisteResultat .. Eiendom

class Eiendom {
    * matrikkelnummer: Matrikkelnummer
    eiere: Eier[]
    eiendomadresser: Adresse[]
}

note top of Eiendom : Man kan velge om man ønsker "eiere" og "eiendomadresser" i resultatet med parameter i LINK adressen.


Eiendom .. Matrikkelnummer

class Matrikkelnummer {
    *kommunenummer: string
    *gaardsnummer: integer
    *bruksnummer: integer
    festenummer: integer
    seksjonsnummer: integer
}


Eiendom *.. Adresse
Eiendom *.. Eier

class Adresse {
    adressetype: Adressetype<<Kode>>
    adresse: string
    postnummer: string
    poststed: string
    landkode: string
}

class Eier {
    *eierforhold: Eierforhold<<Kode>>
    *andel: Andel<<Kode>>
    kontakt: Kontakt
    matrikkelnummer: Matrikkelnummer
}

note top of Eier : Eierforhold kommer fra matrikkel.\nEier har enten kontakt eller matrikkelnummer registrert,\nog er ut i fra det enten en "matrikkeleier" eller en "kontakteier"


Eier .. Kontakt
Eier .. Matrikkelnummer

class Kontakt {
    *navn: string
    personid: PersonID
    etternavn: string
    fornavn: string
    organisasjonid: OrganisasjonID
}

Kontakt .. PersonID
Kontakt .. OrganisasjonID

class PersonID {
    *landkode: string
    *identifikator: string
}

class OrganisasjonID {
    *landkode: string
    *identifikator: string
}

note top of Kontakt : Denne bør være lik som datamodellen i Fiks Arkiv.\nEnten er persondata eller organisasjonsnummer fylt ut.\nUt i fra dette er det enten en kontaktperson eller en kontaktorganisasjon.

@enduml